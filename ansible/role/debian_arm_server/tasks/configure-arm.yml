---
#ln -s /opt/arm/setup/51-automedia.rules /lib/udev/rules.d/
- name: Create the udev symbolic link for the unlock script
  ansible.builtin.file:
    src: /opt/arm/setup/51-automedia.rules
    dest: /lib/udev/rules.d/51-automedia.rules
    owner: root
    group: root
    state: link
  changed_when: false
  when: arm_unlock_disc

- name: Create .abcde config file
  ansible.builtin.template:
    src: .abcde.conf.template
    dest: /opt/arm/config/abcde.conf
    owner: arm
    group: arm

#cp docs/arm.yaml.sample arm.yaml
- name: Create arm.yaml file
  ansible.builtin.template: 
    src: arm.yaml.template 
    dest: "/opt/arm/config/arm.yaml"
    owner: arm 
    group: arm

- name: Create /etc/arm
  ansible.builtin.file:
    path: "/etc/arm"
    state: directory

#mkdir /etc/arm/
- name: Create /etc/arm/config Link
  ansible.builtin.file:
    src: /opt/arm/config
    dest: /etc/arm/config
    owner: arm
    group: arm
    state: link

# make sure directorys in config exists
- name: Create arm directorys 
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ arm_raw_path }}"
    - "{{ arm_transcode_path }}"
    - "{{ arm_video_path }}"
    - "{{ arm_audio_path }}"

- name: Reset permissions on config directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "775"
    owner: arm
    group: arm
    recurse: true
  changed_when: false
  with_items:
    - "{{ arm_raw_path }}"
    - "{{ arm_transcode_path }}"
    - "{{ arm_video_path }}"
    - "{{ arm_audio_path }}"

- name: Reset permissions on /var/arm directory
  become: true
  ansible.builtin.file:
    path: "/var/arm"
    state: directory
    mode: "777"
    owner: arm
    group: arm
    recurse: true
  changed_when: false

#sudo chmod +x /opt/arm/scripts/arm_wrapper.sh
- name: Set /opt/arm/scripts/thickclient/arm_wrapper.sh as executible
  ansible.builtin.file:
    path: /opt/arm/scripts/thickclient/arm_wrapper.sh
    owner: arm
    group: arm
    mode: 'ugo+x'

#sudo chmod +x /opt/arm/scripts/update_key.sh
- name: Set /opt/arm/scripts/update_key.sh as executible
  ansible.builtin.file:
    path: /opt/arm/scripts/update_key.sh
    owner: arm
    group: arm
    mode: 'ugo+x'

#####Extra/Unknown STUFF######
- name: Create /var/arm for logging and default stuff
  ansible.builtin.file:
    path: "/var/logs/arm"
    state: directory
    owner: arm
    group: arm

- name: Create /var/arm/logs 
  ansible.builtin.file:
    path: "/var/logs/arm/logs"
    state: directory
    owner: arm
    group: arm

# for some reason both opt/arm/logs && /home/arm/logs are required
- name: Create /opt/arm/logs
  ansible.builtin.file:
    src: /var/arm/logs
    dest: /opt/arm/logs
    state: link

- name: Create /home/arm/logs
  ansible.builtin.file:
    src: /var/arm/logs
    dest: /home/arm/logs
    state: link
